// Code generated by goa v3.10.2, DO NOT EDIT.
//
// login HTTP client types
//
// Command:
// $ goa gen github.com/codeready-toolchain/sandbox-auth/design

package client

import (
	login "github.com/codeready-toolchain/sandbox-auth/gen/login"
)

// LoginTemporaryRedirectResponseBody is the type of the "login" service
// "login" endpoint HTTP response body.
type LoginTemporaryRedirectResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
}

// LoginUnauthorizedResponseBody is the type of the "login" service "login"
// endpoint HTTP response body.
type LoginUnauthorizedResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
	// Location to redirect to for authentication
	Location *string `form:"location,omitempty" json:"location,omitempty" xml:"location,omitempty"`
}

// CallbackTemporaryRedirectResponseBody is the type of the "login" service
// "callback" endpoint HTTP response body.
type CallbackTemporaryRedirectResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
}

// CallbackUnauthorizedResponseBody is the type of the "login" service
// "callback" endpoint HTTP response body.
type CallbackUnauthorizedResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
	// Location to redirect to for authentication
	Location *string `form:"location,omitempty" json:"location,omitempty" xml:"location,omitempty"`
}

// LoginInternalServerErrorResponseBody is used to define fields on response
// body types.
type LoginInternalServerErrorResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
	// Location to redirect to for authentication
	Location *string `form:"location,omitempty" json:"location,omitempty" xml:"location,omitempty"`
}

// LoginBadRequestResponseBody is used to define fields on response body types.
type LoginBadRequestResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
	// Location to redirect to for authentication
	Location *string `form:"location,omitempty" json:"location,omitempty" xml:"location,omitempty"`
}

// CallbackInternalServerErrorResponseBody is used to define fields on response
// body types.
type CallbackInternalServerErrorResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
	// Location to redirect to for authentication
	Location *string `form:"location,omitempty" json:"location,omitempty" xml:"location,omitempty"`
}

// CallbackBadRequestResponseBody is used to define fields on response body
// types.
type CallbackBadRequestResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
	// Location to redirect to for authentication
	Location *string `form:"location,omitempty" json:"location,omitempty" xml:"location,omitempty"`
}

// NewLoginResultTemporaryRedirect builds a "login" service "login" endpoint
// result from a HTTP "TemporaryRedirect" response.
func NewLoginResultTemporaryRedirect(body *LoginTemporaryRedirectResponseBody, location *string) *login.LoginResult {
	v := &login.LoginResult{
		Outcome: body.Outcome,
	}
	v.Location = location

	return v
}

// NewLoginResultUnauthorized builds a "login" service "login" endpoint result
// from a HTTP "Unauthorized" response.
func NewLoginResultUnauthorized(body *LoginUnauthorizedResponseBody) *login.LoginResult {
	v := &login.LoginResult{
		Outcome:  body.Outcome,
		Location: body.Location,
	}

	return v
}

// NewCallbackLoginResultTemporaryRedirect builds a "login" service "callback"
// endpoint result from a HTTP "TemporaryRedirect" response.
func NewCallbackLoginResultTemporaryRedirect(body *CallbackTemporaryRedirectResponseBody, location *string) *login.LoginResult {
	v := &login.LoginResult{
		Outcome: body.Outcome,
	}
	v.Location = location

	return v
}

// NewCallbackLoginResultUnauthorized builds a "login" service "callback"
// endpoint result from a HTTP "Unauthorized" response.
func NewCallbackLoginResultUnauthorized(body *CallbackUnauthorizedResponseBody) *login.LoginResult {
	v := &login.LoginResult{
		Outcome:  body.Outcome,
		Location: body.Location,
	}

	return v
}
