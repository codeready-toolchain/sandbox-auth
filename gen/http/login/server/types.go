// Code generated by goa v3.10.2, DO NOT EDIT.
//
// login HTTP server types
//
// Command:
// $ goa gen github.com/codeready-toolchain/sandbox-auth/design

package server

import (
	login "github.com/codeready-toolchain/sandbox-auth/gen/login"
)

// LoginTemporaryRedirectResponseBody is the type of the "login" service
// "login" endpoint HTTP response body.
type LoginTemporaryRedirectResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
}

// LoginUnauthorizedResponseBody is the type of the "login" service "login"
// endpoint HTTP response body.
type LoginUnauthorizedResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
	// Location to redirect to for authentication
	Location *string `form:"location,omitempty" json:"location,omitempty" xml:"location,omitempty"`
}

// CallbackTemporaryRedirectResponseBody is the type of the "login" service
// "callback" endpoint HTTP response body.
type CallbackTemporaryRedirectResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
}

// CallbackUnauthorizedResponseBody is the type of the "login" service
// "callback" endpoint HTTP response body.
type CallbackUnauthorizedResponseBody struct {
	// Login Result Outcome
	Outcome *string `form:"outcome,omitempty" json:"outcome,omitempty" xml:"outcome,omitempty"`
	// Location to redirect to for authentication
	Location *string `form:"location,omitempty" json:"location,omitempty" xml:"location,omitempty"`
}

// NewLoginTemporaryRedirectResponseBody builds the HTTP response body from the
// result of the "login" endpoint of the "login" service.
func NewLoginTemporaryRedirectResponseBody(res *login.LoginResult) *LoginTemporaryRedirectResponseBody {
	body := &LoginTemporaryRedirectResponseBody{
		Outcome: res.Outcome,
	}
	return body
}

// NewLoginUnauthorizedResponseBody builds the HTTP response body from the
// result of the "login" endpoint of the "login" service.
func NewLoginUnauthorizedResponseBody(res *login.LoginResult) *LoginUnauthorizedResponseBody {
	body := &LoginUnauthorizedResponseBody{
		Outcome:  res.Outcome,
		Location: res.Location,
	}
	return body
}

// NewCallbackTemporaryRedirectResponseBody builds the HTTP response body from
// the result of the "callback" endpoint of the "login" service.
func NewCallbackTemporaryRedirectResponseBody(res *login.LoginResult) *CallbackTemporaryRedirectResponseBody {
	body := &CallbackTemporaryRedirectResponseBody{
		Outcome: res.Outcome,
	}
	return body
}

// NewCallbackUnauthorizedResponseBody builds the HTTP response body from the
// result of the "callback" endpoint of the "login" service.
func NewCallbackUnauthorizedResponseBody(res *login.LoginResult) *CallbackUnauthorizedResponseBody {
	body := &CallbackUnauthorizedResponseBody{
		Outcome:  res.Outcome,
		Location: res.Location,
	}
	return body
}

// NewLoginCriteria builds a login service login endpoint payload.
func NewLoginCriteria(redirect *string, apiClient *string, referer *string) *login.LoginCriteria {
	v := &login.LoginCriteria{}
	v.Redirect = redirect
	v.APIClient = apiClient
	v.Referer = referer

	return v
}

// NewCallbackLoginCallbackCriteria builds a login service callback endpoint
// payload.
func NewCallbackLoginCallbackCriteria(code *string, state *string) *login.LoginCallbackCriteria {
	v := &login.LoginCallbackCriteria{}
	v.Code = code
	v.State = state

	return v
}
