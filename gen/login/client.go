// Code generated by goa v3.10.2, DO NOT EDIT.
//
// login client
//
// Command:
// $ goa gen github.com/codeready-toolchain/sandbox-auth/design

package login

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "login" service client.
type Client struct {
	LoginEndpoint    goa.Endpoint
	CallbackEndpoint goa.Endpoint
}

// NewClient initializes a "login" service client given the endpoints.
func NewClient(login, callback goa.Endpoint) *Client {
	return &Client{
		LoginEndpoint:    login,
		CallbackEndpoint: callback,
	}
}

// Login calls the "login" endpoint of the "login" service.
func (c *Client) Login(ctx context.Context, p *LoginCriteria) (res *LoginResult, err error) {
	var ires interface{}
	ires, err = c.LoginEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*LoginResult), nil
}

// Callback calls the "callback" endpoint of the "login" service.
func (c *Client) Callback(ctx context.Context, p *LoginCallbackCriteria) (res *LoginResult, err error) {
	var ires interface{}
	ires, err = c.CallbackEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*LoginResult), nil
}
